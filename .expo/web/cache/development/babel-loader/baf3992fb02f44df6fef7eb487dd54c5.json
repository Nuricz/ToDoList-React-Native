{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/nuria/Documentos/cespi/agenda-react-native/src/components/Modal.jsx\";\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nvar ModalComponent = function ModalComponent(_ref) {\n  var show = _ref.show,\n      handleToggle = _ref.handleToggle,\n      handleSubmit = _ref.handleSubmit,\n      actual = _ref.actual,\n      editTodo = _ref.editTodo;\n\n  var _useState = useState(actual ? actual.title : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(actual ? actual.completed : false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      completed = _useState4[0],\n      setCompleted = _useState4[1];\n\n  function onSubmit(e) {\n    e.preventDefault();\n    var todo = {\n      title: title,\n      completed: completed,\n      id: actual ? actual.id : null\n    };\n\n    if (actual) {\n      editTodo(todo);\n    } else {\n      handleSubmit(todo);\n    }\n\n    handleToggle();\n  }\n\n  return React.createElement(Modal, {\n    show: show,\n    onHide: handleToggle,\n    centered: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, actual ? 'Editar una tarea' : 'Agregar una tarea')), React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Titulo\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Ingresa un titulo\",\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Completado\",\n    checked: completed,\n    onChange: function onChange(e) {\n      return setCompleted(e.target.checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))), React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Cancelar\")));\n};\n\nexport default ModalComponent;","map":{"version":3,"sources":["/home/nuria/Documentos/cespi/agenda-react-native/src/components/Modal.jsx"],"names":["React","useState","Modal","Button","Form","ModalComponent","show","handleToggle","handleSubmit","actual","editTodo","title","setTitle","completed","setCompleted","onSubmit","e","preventDefault","todo","id","target","value","checked"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,iBAApC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAMjB;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,kBAA0BT,QAAQ,CAACQ,MAAM,GAAGA,MAAM,CAACE,KAAV,GAAkB,EAAzB,CAAlC;AAAA;AAAA,MAAOA,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCX,QAAQ,CAACQ,MAAM,GAAGA,MAAM,CAACI,SAAV,GAAsB,KAA7B,CAA1C;AAAA;AAAA,MAAOA,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAMC,IAAI,GAAG;AACXP,MAAAA,KAAK,EAALA,KADW;AAEXE,MAAAA,SAAS,EAATA,SAFW;AAGXM,MAAAA,EAAE,EAAEV,MAAM,GAAGA,MAAM,CAACU,EAAV,GAAe;AAHd,KAAb;;AAMA,QAAIV,MAAJ,EAAY;AACVC,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,KAFD,MAEO;AACLV,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACD;;AAEDX,IAAAA,YAAY;AACb;;AAED,SACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEC,YAA3B;AAAyC,IAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,GAAG,kBAAH,GAAwB,mBADjC,CADF,CADF,EAME,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAACK,CAAD,EAAO;AACfJ,MAAAA,QAAQ,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAaE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,OAAO,EAAER,SAHX;AAIE,IAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,aAAOF,YAAY,CAACE,CAAC,CAACI,MAAF,CAASE,OAAV,CAAnB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EAqBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF,CADF,CANF,EAiCE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEf,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAjCF,CADF;AAyCD,CArED;;AAuEA,eAAeF,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst ModalComponent = ({\n  show,\n  handleToggle,\n  handleSubmit,\n  actual,\n  editTodo,\n}) => {\n  const [title, setTitle] = useState(actual ? actual.title : '');\n  const [completed, setCompleted] = useState(actual ? actual.completed : false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    const todo = {\n      title,\n      completed,\n      id: actual ? actual.id : null,\n    };\n\n    if (actual) {\n      editTodo(todo);\n    } else {\n      handleSubmit(todo);\n    }\n\n    handleToggle();\n  }\n\n  return (\n    <Modal show={show} onHide={handleToggle} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {actual ? 'Editar una tarea' : 'Agregar una tarea'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmit}>\n          <Form.Group className='mb-3'>\n            <Form.Label>Titulo</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Ingresa un titulo'\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3'>\n            <Form.Check\n              type='checkbox'\n              label='Completado'\n              checked={completed}\n              onChange={(e) => setCompleted(e.target.checked)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Guardar\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='primary' onClick={handleToggle}>\n          Cancelar\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalComponent;\n"]},"metadata":{},"sourceType":"module"}